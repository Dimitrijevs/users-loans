services:
  gateway-service:
    image: gleb8/gateway-service:latest
    container_name: gateway-service
    networks:
      - localprom
    ports:
      - "8090:8090"
    environment:

      # Activate the docker profile
      SPRING_PROFILES_ACTIVE: docker

      # Server settings
      SERVER_PORT: 8090
      
      # Application name
      SPRING_APPLICATION_NAME: gateway
      
      # JWT settings
      JWT_SECRET: "OT39JZ2rZQ2D/EbnJu9trUMV3gRptzA1Dk3wVqEn6VHnIAy4hs3Ml/Aoh0ckROWCH/oydgsDzFonYtlJmDfnY98JRGSWw04S+f6dhIRv+CiLTRtsFPxrYFLCjBDZZVOkTA2QuFyuHMy+ZGtEagSmF6xQm0DTBqb8shoqfsj+9P"
      JWT_EXPIRATION: 3600000
      
      # Eureka client settings
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: gateway-service
      
      # Spring Cloud Gateway settings
      SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_HTTPCLIENT_CONNECT_TIMEOUT: 2000
      SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_HTTPCLIENT_RESPONSE_TIMEOUT: 4000
      SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_DISCOVERY_LOCATOR_ENABLED: false
      SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID: true

      # Management/Actuator settings
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_METRICS_TAGS_APPLICATION: gateway
      MANAGEMENT_HEALTH_CIRCUITBREAKERS_ENABLED: true
      MANAGEMENT_HEALTH_RATELIMITERS_ENABLED: true
      
      # Resilience4j Circuit Breaker settings
      RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_REGISTERHEALTHINDICATOR: true
      RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_SLIDINGWINDOWSIZE: 10
      RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_MINIMUMNUMBEROFCALLS: 5
      RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_PERMITTEDNUMBEROFCALLSINHALFOPENSTATE: 3
      RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_AUTOMATICTRANSITIONFROMOPENTOHALFOPENABLED: true
      RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_WAITDURATIONINOPENSTATE: 8000
      RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_EVENTCONSUMERBUFFERSIZE: 100
    depends_on:
      - eureka-server
      - users-service
      - loans-service
      - auth-service

  eureka-server:
    image: gleb8/eureka-server:latest
    container_name: eureka-server
    networks:
      - localprom
    ports:
      - "8761:8761"
    environment:

      # Activate the docker profile
      SPRING_PROFILES_ACTIVE: docker

      # Server settings
      SERVER_PORT: 8761
      
      # Application name
      SPRING_APPLICATION_NAME: eureka-server
      
      # Eureka server settings
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: false
      EUREKA_CLIENT_FETCH_REGISTRY: false
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: eureka-server

      # Cache / fetch settings
      EUREKA_CLIENT_ENABLE_DELTA: true
      EUREKA_CLIENT_REGISTRY_FETCH_INTERVAL_SECONDS: 30
      EUREKA_CLIENT_FETCH_REMOTE_REGIONS: false

      # Management/Actuator settings
      MANAGEMENT_METRICS_TAGS_APPLICATION: eureka
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"

  auth-service:
    image: gleb8/auth-service:1.0
    container_name: auth-service
    networks:
      - localprom
    ports:
      - "8086:8086"
    environment:
      # Server settings
      SERVER_PORT: 8086
      
      # Application name
      SPRING_APPLICATION_NAME: auth
      
      # Eureka client settings
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: auth-service
      
      # JWT settings (same as gateway for token compatibility)
      JWT_SECRET: "OT39JZ2rZQ2D/EbnJu9trUMV3gRptzA1Dk3wVqEn6VHnIAy4hs3Ml/Aoh0ckROWCH/oydgsDzFonYtlJmDfnY98JRGSWw04S+f6dhIRv+CiLTRtsFPxrYFLCjBDZZVOkTA2QuFyuHMy+ZGtEagSmF6xQm0DTBqb8shoqfsj+9P"
      JWT_EXPIRATION: 3600000
      
      # Management/Actuator settings
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_METRICS_TAGS_APPLICATION: auth
    depends_on:
      - eureka-server
      
  users-service:
    image: gleb8/users-service:latest
    container_name: users-service
    networks:
      - localprom
    ports:
      - "8081:8080"
    environment:

      # Activate the docker profile
      SPRING_PROFILES_ACTIVE: docker

      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db_users:5432/loans-users
      SPRING_DATASOURCE_USERNAME: loansusers
      SPRING_DATASOURCE_PASSWORD: loansusers_password
      
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: users-service

      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true

      SPRING_APPLICATION_NAME: users
      SERVER_PORT: 8080

      MANAGEMENT_METRICS_TAGS_APPLICATION: users
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"

      RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_TIMEOUT_DURATION: 1000
      RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_LIMIT_REFRESH_PERIOD: 10000
      RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_LIMIT_FOR_PERIOD: 20
    depends_on:
      - postgres_db_users
      - eureka-server

  postgres_db_users:
    image: postgres:17-alpine
    container_name: loans-users-postgres
    networks:
      - localprom
    environment:
      POSTGRES_DB: loans-users
      POSTGRES_USER: loansusers
      POSTGRES_PASSWORD: loansusers_password
    ports:
      - "5440:5432"
    volumes:
      - loans-users-postgres-data:/var/lib/postgresql/data

  postgres-exporter-users:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter-users
    networks:
      - localprom
    environment:
      DATA_SOURCE_NAME: "postgresql://loansusers:loansusers_password@postgres_db_users:5432/loans-users?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres_db_users

  loans-service:
    image: gleb8/loans-service:1.0
    container_name: loans-service
    networks:
      - localprom
    ports:
      - "8082:8080"
    environment:

      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db_loans:5432/loans-loans
      SPRING_DATASOURCE_USERNAME: loansusers
      SPRING_DATASOURCE_PASSWORD: loansusers_password
      
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: loans-service

      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true

      SPRING_APPLICATION_NAME: loans
      SERVER_PORT: 8080

      MANAGEMENT_METRICS_TAGS_APPLICATION: loans
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"

      RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_TIMEOUT_DURATION: 1000
      RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_LIMIT_REFRESH_PERIOD: 10000
      RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_LIMIT_FOR_PERIOD: 20
    depends_on:
      - postgres_db_loans
      - eureka-server

  postgres_db_loans:
    image: postgres:17-alpine
    container_name: loans-loans-postgres
    networks:
      - localprom
    environment:
      POSTGRES_DB: loans-loans
      POSTGRES_USER: loansusers
      POSTGRES_PASSWORD: loansusers_password
    ports:
      - "5441:5432"
    volumes:
      - loans-loan-postgres-data:/var/lib/postgresql/data

  postgres-exporter-loans:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter-loans
    networks:
      - localprom
    environment:
      DATA_SOURCE_NAME: "postgresql://loansusers:loansusers_password@postgres_db_loans:5432/loans-loans?sslmode=disable"
    ports:
      - "9188:9187"
    depends_on:
      - postgres_db_loans

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    volumes:
      - "./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml"
      - "./monitoring/rules:/etc/prometheus/rules"
      - "prometheus-data:/prometheus"
    networks:
      - localprom
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - localprom
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter
    networks:
      - localprom
    ports:
      - 9100:9100

  alert-manager:
    image: prom/alertmanager
    volumes:
      - "./monitoring/alertmanager.yaml:/etc/alertmanager/alertmanager.yml"
      - "alertmanager-data:/data"
    networks:
      - localprom
    ports:
      - 9093:9093

  blackbox-exporter:
    image: prom/blackbox-exporter
    container_name: blackbox-exporter
    networks:
      - localprom
    volumes:
      - "./monitoring/blackbox.yaml:/config/blackbox_exporter/config.yml"
    ports:
      - "9115:9115"

  # Keycloak Database
  postgres_db_keycloak:
    image: postgres:17-alpine
    container_name: keycloak-postgres
    networks:
      - localprom
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    ports:
      - "5442:5432"
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data

  keycloak:
    image: keycloak/keycloak:latest
    container_name: keycloak
    networks:
      - localprom
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres_db_keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_PROXY_ADDRESS_FORWARDING: true
    ports:
      - "7001:8080"
    depends_on:
      - postgres_db_keycloak
    command: start-dev

  mailhog:
    image: jcalonso/mailhog:latest
    container_name: mailhog
    networks:
      - localprom
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port

volumes:
  loans-users-postgres-data:
  loans-loan-postgres-data:
  prometheus-data:
  alertmanager-data:
  grafana-data:
  keycloak-postgres-data:

networks:
  localprom:
    driver: bridge
